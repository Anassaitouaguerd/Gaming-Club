spring:
  application:
    name: api-gateway
  main:
    web-application-type: reactive
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: ["http://localhost:4200"]
            allowedMethods: [GET, POST, PUT, DELETE, OPTIONS]
            allowedHeaders: ["Origin", "Content-Type", "Accept", "Authorization"]
            exposedHeaders: ["Authorization"]
            allowCredentials: true
            maxAge: 3600
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        # Reservation Service Routes
        - id: reservation-all
          uri: lb://reservation-service
          predicates:
            - Path=/reservation-service/reservation/all
          filters:
            - SetPath=/reservation/all
            - RemoveRequestHeader=Authorization

        - id: reservation-get
          uri: lb://reservation-service
          predicates:
            - Path=/reservation-service/get/**
          filters:
            - RewritePath=/reservation-service/get/(?<segment>.*), /reservation/get/${segment}
            - RemoveRequestHeader=Authorization

        - id: reservation-resources-available
          uri: lb://reservation-service
          predicates:
            - Path=/reservation-service/reservations/resources/available
          filters:
            - SetPath=/reservations/resources/available
            - RemoveRequestHeader=Authorization

        - id: reservation-create
          uri: lb://reservation-service
          predicates:
            - Path=/reservation-service/member/reservation/create/**
          filters:
            - RewritePath=/reservation-service/member/reservation/create/(?<segment>.*), /member/reservation/create/${segment}
            - RemoveRequestHeader=Authorization

        - id: about-reservation-create
          uri: lb://reservation-service
          predicates:
            - Path=/reservation-service/member/about/reservation/create
          filters:
            - RewritePath=/reservation-service/(?<remaining>.*), /${remaining}
            - RemoveRequestHeader=Authorization

        - id: reservation-cancel
          uri: lb://reservation-service
          predicates:
            - Path=/reservation-service/reservations/cancel/**
          filters:
            - RewritePath=/reservation-service/reservations/cancel/(?<segment>.*), /reservations/cancel/${segment}
            - RemoveRequestHeader=Authorization

        - id: reservation-update
          uri: lb://reservation-service
          predicates:
            - Path=/reservation-service/reservations/update/**
          filters:
            - RewritePath=/reservation-service/reservations/update/(?<segment>.*), /reservations/update/${segment}
            - RemoveRequestHeader=Authorization

        - id: reservation-user
          uri: lb://reservation-service
          predicates:
            - Path=/reservation-service/reservations/user/**
          filters:
            - RewritePath=/reservation-service/reservations/user/(?<segment>.*), /reservations/user/${segment}
            - RemoveRequestHeader=Authorization

        # Club Management Routes
        - id: club-all
          uri: lb://reservation-service
          predicates:
            - Path=/reservation-service/club/all
          filters:
            - SetPath=/club/all
            - RemoveRequestHeader=Authorization

        - id: club-get
          uri: lb://reservation-service
          predicates:
            - Path=/reservation-service/club/get/**
          filters:
            - RewritePath=/reservation-service/club/get/(?<segment>.*), /club/get/${segment}
            - RemoveRequestHeader=Authorization

        - id: club-add
          uri: lb://reservation-service
          predicates:
            - Path=/reservation-service/club/add
          filters:
            - SetPath=/club/add
            - RemoveRequestHeader=Authorization

        - id: club-update
          uri: lb://reservation-service
          predicates:
            - Path=/reservation-service/club/update/**
          filters:
            - RewritePath=/reservation-service/club/update/(?<segment>.*), /club/update/${segment}
            - RemoveRequestHeader=Authorization

        - id: club-delete
          uri: lb://reservation-service
          predicates:
            - Path=/reservation-service/club/delete/**
          filters:
            - RewritePath=/reservation-service/club/delete/(?<segment>.*), /club/delete/${segment}
            - RemoveRequestHeader=Authorization

        # Staff Club Routes
        - id: staff-clubs-all
          uri: lb://reservation-service
          predicates:
            - Path=/reservation-service/staff/clubs/all
          filters:
            - SetPath=/staff/clubs/all
            # Authorization header is preserved for staff endpoints

        - id: staff-clubs-all-reservations
          uri: lb://reservation-service
          predicates:
            - Path=/reservation-service/staff/clubs/all/reservations
          filters:
            - SetPath=/staff/clubs/all/reservations
            # Authorization header is preserved

        - id: staff-clubs-with-club-id
          uri: lb://reservation-service
          predicates:
            - Path=/reservation-service/staff/clubs/club/**
          filters:
            - RewritePath=/reservation-service/staff/clubs/club/(?<segment>.*), /staff/clubs/club/${segment}
            # Authorization header is preserved

        - id: staff-clubs-base
          uri: lb://reservation-service
          predicates:
            - Path=/reservation-service/staff/clubs/**
          filters:
            - RewritePath=/reservation-service/staff/clubs/(?<segment>.*), /staff/clubs/${segment}
            # Authorization header is preserved

        # User Service Routes
        - id: user-all
          uri: lb://user-service
          predicates:
            - Path=/user-service/user/all
          filters:
            - SetPath=/user/all
            - RemoveRequestHeader=Authorization

        - id: user-create
          uri: lb://user-service
          predicates:
            - Path=/user-service/user/add
          filters:
            - SetPath=/user/add
            - RemoveRequestHeader=Authorization

        - id: user-update
          uri: lb://user-service
          predicates:
            - Path=/user-service/user/update/**
          filters:
            - RewritePath=/user-service/update/(?<segment>.*), /user/update/${segment}
            - RemoveRequestHeader=Authorization

        - id: user-get
          uri: lb://user-service
          predicates:
            - Path=/user-service/get/**
          filters:
            - RewritePath=/user-service/get/(?<segment>.*), user/get/${segment}
            # Missing RemoveRequestHeader filter

        - id: user-get-by-email
          uri: lb://user-service
          predicates:
            - Path=/user-service/user/get/byEmail/**
          filters:
            - RewritePath=/user-service/user/get/byEmail/(?<segment>.*), /user/get/byEmail/${segment}
            - RemoveRequestHeader=Authorization

        - id: user-get-by-username
          uri: lb://user-service
          predicates:
            - Path=/user-service/user/get/byUserName/**
          filters:
            - RewritePath=/user-service/user/get/byUserName/(?<segment>.*), /user/get/byUserName/${segment}
            - RemoveRequestHeader=Authorization

        # Auth Service Routes
        - id: auth-register
          uri: lb://user-service
          predicates:
            - Path=/auth/register
          filters:
            - SetPath=/auth/register
            - RemoveRequestHeader=Authorization

        - id: auth-login
          uri: lb://user-service
          predicates:
            - Path=/user-service/auth/login
          filters:
            - SetPath=/auth/login
            - RemoveRequestHeader=Authorization

        - id: auth-logout
          uri: lb://user-service
          predicates:
            - Path=/user-service/auth/logout
          filters:
            - SetPath=/auth/logout
            - RemoveRequestHeader=Authorization

        - id: auth-validate
          uri: lb://user-service
          predicates:
            - Path=/auth/validate
          filters:
            - SetPath=/auth/validate
            # Authorization header is preserved

        - id: auth-user
          uri: lb://user-service
          predicates:
            - Path=/auth/user
          filters:
            - SetPath=/auth/user
            # Authorization header is preserved

        - id: auth-getCurrentUser
          uri: lb://user-service
          predicates:
            - Path=/user-service/auth/getCurrentUser/**
          filters:
            - RewritePath=/user-service/auth/getCurrentUser/(?<segment>.*), /auth/getCurrentUser/${segment}
            # Authorization header is preserved

server:
  port: 8766

logging:
  level:
    org.springframework:
      web: DEBUG
      security: DEBUG
      cloud.gateway: DEBUG

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8765/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    hostname: localhost
    preferIpAddress: false